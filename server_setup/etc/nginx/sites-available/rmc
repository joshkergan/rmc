server {
  listen       80;
  server_name  SITE_URL;

  # Redirect all HTTP traffic to HTTPS. See
  # https://konklone.com/post/switch-to-https-now-for-free
  return 301 https://$host$request_uri;
}

server {
  # TODO(david): Enable SPDY. Requires building nginx from source with the
  #     ngx_http_spdy_module.
  listen 443 ssl;
  server_name SITE_URL;

  ssl_certificate /etc/letsencrypt/live/SITE_URL/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/SITE_URL/privkey.pem;

  # Tell browsers to require SSL (max age in seconds).
  add_header Strict-Transport-Security max-age=31536000;

  # Turn on session resumption using a 10 min cache shared across nginx
  # processes as recommended by
  # http://nginx.org/en/docs/http/configuring_https_servers.html
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;
  keepalive_timeout   70;

  # TODO(david): See https://gist.github.com/konklone/6532544 for additional
  #     SSL security options.

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript;

  location / {
    try_files $uri @rmc_app;
  }

  location ~ /.well-known {
    allow all;
  }

  location /static {
    expires 2d;
    add_header Pragma public;
    add_header Cache-Control "public";

    alias /home/rmc/rmc/server/static/;
  }

  location @rmc_app {
    # Don't cache dynamically generated responses from Flask
    expires epoch;
    add_header Cache-Control no-cache;

    include uwsgi_params;
    uwsgi_pass unix:/tmp/uwsgi.sock;
  }
}
